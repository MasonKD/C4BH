type RequestInfoDos @model @auth(rules: [{allow: public}]) {
  id: ID!
  DxFID: String
  RequestRespondDirectSecureEmail: Boolean
  RequestRespondDirectEmailAddress: String
  RequestRespondIHE: Boolean
  RequestRespondFHIR: Boolean
  RequestRespondFHIRendpoint: String
  RequestRespondOther: Boolean
  RequestRespondOtherDescribe: String
  UserIdToken: String
  RequestRespondNationalNetworkDos: String
}

type NotificationsADTDos @model @auth(rules: [{allow: public}]) {
  id: ID!
  SendInfoDirectSecureEmail: Boolean
  SendInfosFTP: Boolean
  SendInfoHL7v2: Boolean
  SendInfoMLLP_HTTPS: Boolean
  SendADTHTTPS_FHIR: Boolean
  SendADTPortal: Boolean
  SendADTOther: Boolean
  SendADTOtherDescribe: String
  DxFID: String
  UserIdToken: String
}

type NotificationsADTUno @model @auth(rules: [{allow: public}]) {
  id: ID!
  ReceiveADTDirectSecureEmail: Boolean
  ReceiveADTDirectEmailAddress: String
  ReceiveADTsFTP: Boolean
  ReceiveADTPointToPoint: Boolean
  ReceiveADTHTTPSnonFHIR: Boolean
  ReceiveADTHTTPSFHIR: Boolean
  ReceiveADTHTTPSEndpoint: String
  ReceiveADTOther: Boolean
  ReceiveADTOtherDescription: String
  DxFID: String
  UserIdToken: String
}

type HIPAA @model @auth(rules: [{allow: public}]) {
  id: ID!
  CoveredHIPAA: Boolean
  HybridHIPAA: Boolean
  AssociateHIPAA: Boolean
  NotCoveredHIPAA: Boolean
  DxFID: String
  UserIdToken: String
}

type RequestInfoUno @model @auth(rules: [{allow: public}]) {
  id: ID!
  RequestRecieveDirectSecureEmail: Boolean
  RequestDirectEmailAddress: String
  RequestIHE: Boolean
  RequestRespondNationalNetworUno: String
  RequestOther: Boolean
  RequestOtherDescribe: String
  DxFID: String
  UserIdToken: String
  RequestFHIR: Boolean
}

type InformationDelivery @model @auth(rules: [{allow: public}]) {
  id: ID!
  RecieveInfoDirectSecureEmail: Boolean
  RecieveInfosFTP: Boolean
  RecieveInfoHL7V2: Boolean
  RecieveInfoMLLP_HTTPS: String
  RecieveInfoThirdPartyReferral: Boolean
  RecieveInfoThirdPartyPlatform: String
  RecieveInfoOther: Boolean
  RecieveInfoOther_Describe: String
  RecieveInfoDirectEmailAddress: String
  SendInfoDirectSecureEmail: Boolean
  SendInfosFTP: Boolean
  SendInfoHL7v2: Boolean
  SendInfoMLLP_HTTPS: String
  SendInfoThirdPartyReferral: Boolean
  SendInfoThirdPartyPlatform: String
  SendInfoOther: Boolean
  SenInfoOther_Describe: String
  DxFID: String
  UserIdToken: String
}

type NotificationsADT @model @auth(rules: [{allow: public}]) {
  id: ID!
  ReceiveADTDirectSecureEmail: Boolean
  ReceiveADTDirectEmailAddress: String
  ReceiveADTsFTP: Boolean
  ReceiveADTPointToPoint: Boolean
  ReceiveADTHTTPSnonFHIR: Boolean
  ReceiveADTHTTPSFHIR: Boolean
  ReceiveADTHTTPSEndpoint: String
  ReceiveADTOther: Boolean
  ReceiveADTOtherDescription: String
  SendADTDirectSecureEmail: Boolean
  SendADTsFTP: Boolean
  SendADTPointToPoint: Boolean
  SendADTHTTPSNon_FHIR: Boolean
  SendADTHTTPS_FHIR: Boolean
  SendADTPortal: Boolean
  SendADTOther: Boolean
  SendADTOtherDescribe: String
  DxFID: String
  UserIdToken: String
}

type TechIntermediaries @model @auth(rules: [{allow: public}]) {
  id: ID!
  IntIntegrationEngineUsed: String
  IntClinicalDataRepoUsed: String
  DxFID: String
  UserIdToken: String
}

type TechCBO @model @auth(rules: [{allow: public}]) {
  id: ID!
  Customer_Management_System: String
  DxFID: String
  UserIdToken: String
  CBOCounties: [String!]
}

type TechAcute @model @auth(rules: [{allow: public}]) {
  id: ID!
  EHR_Vendors: String
  DxFID: String
  UserIdToken: String
}

type UserInfoC4BH @model @auth(rules: [{allow: public}]) {
  id: ID!
  User: String
  DxFID: String
  UserIdToken: String
}
 